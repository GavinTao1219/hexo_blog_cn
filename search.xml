<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spring Boot Web基本结构</title>
      <link href="/2020/01/09/spring-boot-web-jie-gou/"/>
      <url>/2020/01/09/spring-boot-web-jie-gou/</url>
      
        <content type="html"><![CDATA[<h3 id="Spring-Boot-Web基本结构"><a href="#Spring-Boot-Web基本结构" class="headerlink" title="Spring Boot Web基本结构"></a>Spring Boot Web基本结构</h3><p>此处参考<a href="https://github.com/JeffLi1993/springboot-learning-example" target="_blank" rel="noopener">chapter3-springboot-web</a></p><h4 id="MVC及SSM与三层架构的关系"><a href="#MVC及SSM与三层架构的关系" class="headerlink" title="MVC及SSM与三层架构的关系"></a>MVC及SSM与三层架构的关系</h4><p>MVC: Model, View, Controller</p><p>三层架构：View, Service, Dao</p><p><img src="/.com//1.png" alt></p><p>下图展现了SSM（SpringMVC、Spring、MyBatis）中的三层架构<img src="/.com//2.png" alt></p><h4 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h4><p>就目前所学，在Spring Boot项目中，文件层次如下：</p><p><img src="/.com//3.png" alt></p><p>如图，domain为Dao层，定义了数据实体；service为service层，其中包含interface和相应的impl，接口定义了对dao的具体操作；web为view层，包含controller，其中定义了request mapping，service作为类变量注入到controller之中。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建此网站过程之小记</title>
      <link href="/2019/06/24/how-i-built-this-website/"/>
      <url>/2019/06/24/how-i-built-this-website/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1. 安装Hexo"></a>1. 安装Hexo</h2><p>话不多说，按照<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">官网</a>的指导，使用npm安装hexo</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli -g  <span class="token comment" spellcheck="true">## 安装hexo命令行工具</span>hexo init blog           <span class="token comment" spellcheck="true">## 使用hexo初始化一个叫做blog的路径</span><span class="token function">cd</span> blog                  <span class="token comment" spellcheck="true">## cd进去</span><span class="token function">npm</span> <span class="token function">install</span>              <span class="token comment" spellcheck="true">## 在此路径里安装hexo</span>hexo server              <span class="token comment" spellcheck="true">## 运行hexo</span></code></pre><p>执行完这一步，hexo就安装完成了。</p><h2 id="2-将Hexo部署到Github-Pages上"><a href="#2-将Hexo部署到Github-Pages上" class="headerlink" title="2. 将Hexo部署到Github Pages上"></a>2. 将Hexo部署到Github Pages上</h2><p>前往<a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a>主页，根据指引建立Github Pages所需的代码仓库。<br>然后在hexo建立的blog路径下，编辑_config.yml文件，配置自动部署。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Deployment</span><span class="token comment" spellcheck="true">## Docs: https://hexo.io/docs/deployment.html</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git                                           <span class="token comment" spellcheck="true">## 自动部署使用的工具类型    </span>  <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>GavinTao1219/hexo_blog_cn.git  <span class="token comment" spellcheck="true">## git仓库的地址</span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master                                      <span class="token comment" spellcheck="true">## git分支</span></code></pre><p>设置完成后，保存_config.yml文件，然后运行如下代码进行部署</p><pre class=" language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo generatehexo deploy</code></pre><p>或简写为</p><pre class=" language-bash"><code class="language-bash">hexo cl <span class="token operator">&amp;&amp;</span> hexo ghexo d</code></pre><p>hexo是静态博客系统，<code>hexo generate</code>命令即是将代码生成为静态网页，然后<code>hexo deploy</code>则是将生成好的网页通过git部署到Github上。<br>如果有绑定自己域名的需求，则需要在blog/source路径下建立CNAME文件，里面填写自己的域名，比如我的中文版网站填写的就是</p><pre><code>cn.gavintao.com</code></pre><h2 id="3-替换hexo博客主题"><a href="#3-替换hexo博客主题" class="headerlink" title="3. 替换hexo博客主题"></a>3. 替换hexo博客主题</h2><p>在_config.yml中，将theme一栏替换为hexo-theme-matery</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery</code></pre><h2 id="4-对主题进行魔改"><a href="#4-对主题进行魔改" class="headerlink" title="4. 对主题进行魔改"></a>4. 对主题进行魔改</h2><p>主题的对应源码主要在theme/hexo-theme=matery/layout中，其中使用了ejs模板文件来定义页面，其中我增加了展示教育经历、工作经历的代码。</p>]]></content>
      
      
      <categories>
          
          <category> 开源软件/工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
